{"ast":null,"code":"var _jsxFileName = \"/home/artur/Documentos/trybe/trybe-exercicios/front-end/modulo-front-end-secao-9-context-api-e-react-hooks/dia3-useeffect-e-hooks-customizados/exercicio1/dia3-exercicio-1/src/components/EmailList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { listOfEmails } from \"../helpers/mockEmailList\";\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailList() {\n  _s();\n\n  const [emailList, setEmailLIst] = useState([]);\n  useEffect(() => setEmailLIst(listOfEmails), [emailList]);\n\n  const isAllRead = () => {\n    const newEmailList = emailList.filter(email => email.status === 1);\n    return newEmailList.length === emailList.length;\n  };\n\n  useEffect(isAllRead, [emailList]);\n\n  const handleReadEmails = (id, isRead) => {\n    const newEmailList = emailList.map(email => {\n      return email.id === id && (email.status = isRead);\n    });\n    setEmailLIst(newEmailList);\n  };\n\n  const changeAllStatus = isRead => {\n    const newEmailList = emailList.map(email => {\n      return email.status = isRead;\n    });\n    setEmailLIst(newEmailList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: \"Voc\\xEA leu todos os seus emails!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => changeAllStatus(1),\n        children: \"Marcar todos como lidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => changeAllStatus(0),\n        children: \"Marcar todos como n\\xE3o lidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: emailList.map(_ref => {\n        let {\n          id,\n          title,\n          status\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: status === 1 ? 'read' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleReadEmails(id, 0),\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleReadEmails(id, 1),\n            children: \"\\uD83D\\uDCC2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailList, \"C7Jm9r5gmzhcBI9UsH+Ev68YNqI=\");\n\n_c = EmailList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","listOfEmails","Alert","EmailList","emailList","setEmailLIst","isAllRead","newEmailList","filter","email","status","length","handleReadEmails","id","isRead","map","changeAllStatus","title"],"sources":["/home/artur/Documentos/trybe/trybe-exercicios/front-end/modulo-front-end-secao-9-context-api-e-react-hooks/dia3-useeffect-e-hooks-customizados/exercicio1/dia3-exercicio-1/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { listOfEmails } from \"../helpers/mockEmailList\";\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function EmailList() {\n    const [emailList, setEmailLIst] = useState([]);\n\n    useEffect(() => setEmailLIst(listOfEmails), [emailList]);\n\n    const isAllRead = () => {\n        const newEmailList = emailList.filter((email) => email.status === 1);\n        return newEmailList.length === emailList.length\n    }\n\n    useEffect(isAllRead, [emailList]);\n\n    const handleReadEmails = (id, isRead) => {\n        const newEmailList = emailList.map((email) =>{\n               return email.id === id && (email.status = isRead);\n        })\n        setEmailLIst(newEmailList)\n    }\n\n    const changeAllStatus = (isRead) => {\n        const newEmailList = emailList.map((email) =>{\n            return email.status = isRead;\n     })\n     setEmailLIst(newEmailList)\n    }\n\n  return (\n    <div>\n        {<Alert severity=\"success\">\n             Você leu todos os seus emails!\n        </Alert>}\n        <section>\n            <button type=\"button\" onClick={() => changeAllStatus(1)}>Marcar todos como lidos</button>\n            <button type=\"button\" onClick={() => changeAllStatus(0)}>Marcar todos como não lidos</button>\n        </section>\n        <ul>\n            {emailList.map(({id, title, status}) => {\n                \n               return (\n                <li key={id} className={status === 1 ? 'read' : ''}>\n                <h3>{title}</h3>\n                <button type=\"button\" onClick={() => handleReadEmails(id, 0)} >&#128193;</button>\n                <button type=\"button\" onClick={() => handleReadEmails(id, 1)}>&#128194;</button>\n            </li>\n               )\n            })}\n        </ul>\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAChC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAMM,YAAY,CAACJ,YAAD,CAAnB,EAAmC,CAACG,SAAD,CAAnC,CAAT;;EAEA,MAAME,SAAS,GAAG,MAAM;IACpB,MAAMC,YAAY,GAAGH,SAAS,CAACI,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,MAAN,KAAiB,CAA7C,CAArB;IACA,OAAOH,YAAY,CAACI,MAAb,KAAwBP,SAAS,CAACO,MAAzC;EACH,CAHD;;EAKAZ,SAAS,CAACO,SAAD,EAAY,CAACF,SAAD,CAAZ,CAAT;;EAEA,MAAMQ,gBAAgB,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAgB;IACrC,MAAMP,YAAY,GAAGH,SAAS,CAACW,GAAV,CAAeN,KAAD,IAAU;MACtC,OAAOA,KAAK,CAACI,EAAN,KAAaA,EAAb,KAAoBJ,KAAK,CAACC,MAAN,GAAeI,MAAnC,CAAP;IACN,CAFoB,CAArB;IAGAT,YAAY,CAACE,YAAD,CAAZ;EACH,CALD;;EAOA,MAAMS,eAAe,GAAIF,MAAD,IAAY;IAChC,MAAMP,YAAY,GAAGH,SAAS,CAACW,GAAV,CAAeN,KAAD,IAAU;MACzC,OAAOA,KAAK,CAACC,MAAN,GAAeI,MAAtB;IACN,CAFuB,CAArB;IAGHT,YAAY,CAACE,YAAD,CAAZ;EACA,CALD;;EAOF,oBACE;IAAA,wBACK,QAAC,KAAD;MAAO,QAAQ,EAAC,SAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADL,eAII;MAAA,wBACI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAMS,eAAe,CAAC,CAAD,CAApD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAMA,eAAe,CAAC,CAAD,CAApD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAQI;MAAA,UACKZ,SAAS,CAACW,GAAV,CAAc,QAAyB;QAAA,IAAxB;UAACF,EAAD;UAAKI,KAAL;UAAYP;QAAZ,CAAwB;QAErC,oBACC;UAAa,SAAS,EAAEA,MAAM,KAAK,CAAX,GAAe,MAAf,GAAwB,EAAhD;UAAA,wBACA;YAAA,UAAKO;UAAL;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAQ,IAAI,EAAC,QAAb;YAAsB,OAAO,EAAE,MAAML,gBAAgB,CAACC,EAAD,EAAK,CAAL,CAArD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA;YAAQ,IAAI,EAAC,QAAb;YAAsB,OAAO,EAAE,MAAMD,gBAAgB,CAACC,EAAD,EAAK,CAAL,CAArD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHA;QAAA,GAASA,EAAT;UAAA;UAAA;UAAA;QAAA,QADD;MAOF,CATA;IADL;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GAjDuBV,S;;KAAAA,S;AAiDvB"},"metadata":{},"sourceType":"module"}